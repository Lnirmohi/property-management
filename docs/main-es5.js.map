{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/main-page/add-property-dialog/add-property-dialog.component.ts","webpack:///src/app/main-page/add-property-dialog/add-property-dialog.component.html","webpack:///src/app/main-page/main-page.component.ts","webpack:///src/app/main-page/main-page.component.html","webpack:///src/app/main-page/property-display/property-display.component.ts","webpack:///src/app/main-page/property-display/property-display.component.html","webpack:///src/app/services/airtable.service.ts","webpack:///src/app/services/manage-property.service.ts","webpack:///src/app/shared/material.module.ts","webpack:///src/app/shared/property.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AddPropertyDialogComponent","fb","dialogRef","addPropertyForm","group","name","required","description","size","close","value","reset","handleSubmit","clear","MainPageComponent","dialog","manageProperty","propertyList","getPropertyList","subscribe","records","forEach","record","push","fields","addPropertyDialogConfig","disableClose","autoFocus","open","afterClosed","formData","addProperty","data","property","confirmation","confirm","deleteProperty","deleted","splice","findIndex","item","addPropertyToList","PropertyDisplayComponent","deletePropertyEvent","emit","handleDelete","AirtableService","http","base","apiKey","table","tableName","providedIn","ManagePropertyService","ats","getTable","select","eachPage","create","propertyId","destroy","MaterialModule","Property","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { MainPageComponent } from './main-page/main-page.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: MainPageComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Property Management';\n}\n","<app-main-page></app-main-page>","import { MaterialModule } from './shared/material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MainPageComponent } from './main-page/main-page.component';\r\nimport { PropertyDisplayComponent } from './main-page/property-display/property-display.component';\r\nimport { AddPropertyDialogComponent } from './main-page/add-property-dialog/add-property-dialog.component';\r\nimport { NgxAirtableModule } from 'ngx-airtable';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainPageComponent,\r\n    PropertyDisplayComponent,\r\n    AddPropertyDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxAirtableModule.forRoot()\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-add-property-dialog',\r\n  templateUrl: './add-property-dialog.component.html',\r\n  styleUrls: ['./add-property-dialog.component.scss']\r\n})\r\nexport class AddPropertyDialogComponent implements OnInit {\r\n\r\n  addPropertyForm: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<AddPropertyDialogComponent>) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.addPropertyForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      description: ['', Validators.required],\r\n      size: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.dialogRef.close({...this.addPropertyForm.value});\r\n    this.addPropertyForm.reset();\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  clear() {\r\n    this.addPropertyForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"dialog-container\">\n    <div class=\"dialog-header\">\n        <h2 mat-dialog-title>Add property to list</h2>\n        <mat-icon (click)=\"close()\" class=\"close-btn\">close</mat-icon>\n    </div>\n    \n    <mat-dialog-content>\n        <form [formGroup]=\"addPropertyForm\" (ngSubmit)=\"handleSubmit()\" class=\"property-form\">\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Name</mat-label>\n                <input \n                    matInput \n                    formControlName=\"name\" \n                    type=\"text\" \n                    name=\"name\" \n                    aria-labelledby=\"property name\"\n                >\n            </mat-form-field>\n        \n            <mat-form-field appearance=\"fill\">\n                <mat-label>Description</mat-label>\n                <textarea \n                    matInput \n                    formControlName=\"description\" \n                    name=\"description\" \n                    aria-labelledby=\"property description\"\n                ></textarea>\n            </mat-form-field>\n        \n            <mat-form-field appearance=\"fill\">\n                <mat-label>Size</mat-label>\n                <input \n                    matInput \n                    formControlName=\"size\" \n                    type=\"number\" \n                    name=\"size\" \n                    aria-labelledby=\"property size\"\n                >\n                <p matSuffix>square ft</p>\n            </mat-form-field>\n        \n            <div class=\"form-actions\">\n                <button mat-raised-button (click)=\"clear()\" type=\"button\" color=\"warn\">\n                    Clear\n                </button>\n                \n                <button mat-raised-button color=\"primary\" type=\"submit\">\n                    Add property\n                </button>\n            </div>\n        </form>\n    </mat-dialog-content>\n</div>","import { ManagePropertyService } from './../services/manage-property.service';\r\n\r\nimport { AddPropertyDialogComponent } from './add-property-dialog/add-property-dialog.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Property } from '../shared/property';\r\n\r\n@Component({\r\n  selector: 'app-main-page',\r\n  templateUrl: './main-page.component.html',\r\n  styleUrls: ['./main-page.component.scss']\r\n})\r\nexport class MainPageComponent implements OnInit {\r\n\r\n  propertyList: Property[];\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private manageProperty: ManagePropertyService,\r\n  ) {\r\n      this.propertyList = [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPropertyList();\r\n  }\r\n\r\n  getPropertyList() {\r\n\r\n    this.manageProperty.getPropertyList()\r\n      .subscribe(records => {\r\n\r\n        records.forEach(record => {\r\n          this.propertyList.push(new Property(\r\n            record.id,\r\n            record.fields.name,\r\n            record.fields.description,\r\n            record.fields.size\r\n          )\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  addPropertyToList() {\r\n\r\n    const addPropertyDialogConfig = new MatDialogConfig();\r\n\r\n    addPropertyDialogConfig.disableClose = true;\r\n    addPropertyDialogConfig.autoFocus = true;\r\n\r\n    const dialogRef = this.dialog.open(AddPropertyDialogComponent, addPropertyDialogConfig);\r\n\r\n    dialogRef.afterClosed().subscribe(formData => {\r\n\r\n      this.manageProperty.addProperty(\r\n        new Property(\r\n          null,\r\n          formData.name,\r\n          formData.description,\r\n          formData.size\r\n        )\r\n      ).subscribe(data => {\r\n\r\n        this.propertyList.push(\r\n          new Property(data.id, data.fields.name, data.fields.description, data.fields.size)\r\n        );\r\n      });\r\n\r\n     /*   */\r\n    });\r\n  }\r\n\r\n  deleteProperty(property: Property) {\r\n\r\n    const confirmation = confirm('Delete property: ' + property.name);\r\n\r\n    if (confirmation) {\r\n\r\n      this.manageProperty.deleteProperty(property.id)\r\n        .subscribe(data => {\r\n\r\n          if (data.deleted) {\r\n            this.propertyList.splice(\r\n              this.propertyList.findIndex(item => item.id === property.id),\r\n              1\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","<mat-drawer-container class=\"drawer-container\">\n    <mat-drawer mode=\"side\" opened #drawer class=\"drawer-container__drawer\">\n        <div class=\"menu\">\n            <h2>\n                Menu\n            </h2>\n\n            <button mat-raised-button color=\"primary\" (click)=\"addPropertyToList()\">\n                <mat-icon>add</mat-icon>Add property\n            </button>\n        </div>\n    </mat-drawer>\n    <mat-drawer-content class=\"drawer-content\">\n        <h1>Property list</h1>\n        <div class=\"properties-container\">\n            <ng-container *ngFor=\"let currentProperty of propertyList\">\n                <app-property-display (deletePropertyEvent)=\"deleteProperty($event)\" [property]=\"currentProperty\"></app-property-display>\n            </ng-container>\n        </div>\n    </mat-drawer-content>\n</mat-drawer-container>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Property } from 'src/app/shared/property';\n\n@Component({\n  selector: 'app-property-display',\n  templateUrl: './property-display.component.html',\n  styleUrls: ['./property-display.component.scss']\n})\nexport class PropertyDisplayComponent implements OnInit {\n\n  @Input() property: Property;\n  @Output() deletePropertyEvent: EventEmitter<Property>;\n\n  constructor() {\n    this.deletePropertyEvent = new EventEmitter();\n  }\n\n  ngOnInit(): void {\n  }\n\n  handleDelete() {\n    this.deletePropertyEvent.emit(\n      this.property\n    );\n  }\n\n}\n","<mat-accordion>\n    <mat-expansion-panel expanded class=\"property-panel\">\n        <mat-expansion-panel-header>\n            <mat-panel-title class=\"property-title\">\n                {{property.name | titlecase}}\n              </mat-panel-title>\n        </mat-expansion-panel-header>\n\n        <section class=\"section\">\n            <p class=\"section__heading\">Description: </p>\n            <p class=\"section__description\">{{property.description}}</p>\n        </section>\n        <section class=\"section\">\n            <p class=\"section__heading\">Size: </p>\n            <p class=\"section__description\">{{property.size}} sq ft</p>\n        </section>\n\n        <div class=\"property-actions\">\n            <button mat-raised-button color=\"primary\" disabled>View</button>\n            <button mat-raised-button color=\"warn\" (click)=\"handleDelete()\">Delete</button>\n        </div>\n    </mat-expansion-panel>\n</mat-accordion>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Airtable, Base, Table } from 'ngx-airtable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AirtableService {\r\n\r\n  base: Base;\r\n  table: Table;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n    this.base = new Airtable(this.http, {\r\n      apiKey: 'keyPyDOMPXIltW7Bw',\r\n    }).base('appW7DYNYwUXpt4tA');\r\n\r\n    this.table = this.base.table({\r\n      tableName: 'property-list'\r\n    });\r\n  }\r\n\r\n  getTable() {\r\n    return this.table;\r\n  }\r\n}\r\n","import { AirtableService } from './airtable.service';\r\n// import { AirtableService } from './../shared/airtable.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { Property } from '../shared/property';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ManagePropertyService {\r\n\r\n  constructor(private ats: AirtableService) {}\r\n\r\n  getPropertyList() {\r\n\r\n    return this.ats.getTable().select({}).eachPage();\r\n  }\r\n\r\n  addProperty(property: Property) {\r\n\r\n    return this.ats.getTable().create(\r\n      {\r\n        fields: {\r\n          name: property.name,\r\n          description: property.description,\r\n          size: property.size\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteProperty(propertyId: string) {\r\n    return this.ats.getTable().destroy(propertyId);\r\n  }\r\n}\r\n\r\n/*\r\n\r\n(err, records) => {\r\n\r\n        if(err) {\r\n          return err;\r\n        }\r\n\r\n        records.forEach(record => {\r\n          console.log(record);\r\n        });\r\n      }\r\n*/\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    MatDialogModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatListModule,\n    MatExpansionModule,\n    MatInputModule\n  ]\n})\nexport class MaterialModule { }\n","export class Property {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    size: number;\r\n\r\n    constructor(id: string, name: string, description: string, size: number) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.size = size;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}